{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./app/app.component.html","webpack:///./app/app.component.ts","webpack:///./app/app.module.ts","webpack:///./app/cart/cart.component.html","webpack:///./app/cart/cart.component.ts","webpack:///./app/checkout/checkout.component.css","webpack:///./app/checkout/checkout.component.html","webpack:///./app/checkout/checkout.component.ts","webpack:///./app/interfaces/order-item.ts","webpack:///./app/interfaces/order.ts","webpack:///./app/login/login.component.html","webpack:///./app/login/login.component.ts","webpack:///./app/product-list/product-list.component.css","webpack:///./app/product-list/product-list.component.html","webpack:///./app/product-list/product-list.component.ts","webpack:///./app/services/dataService.ts","webpack:///./app/shop/shop.component.html","webpack:///./app/shop/shop.component.ts","webpack:///./environments/environment.ts","webpack:///./main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;ACZA,sD;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,cAAc,CAAC;IACzB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;YAEpB,MAAM,EAAE,EAAE;SACX,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiB;AACgB;AACF;AACD;AACV;AAEE;AAC8B;AAAA,CAAC;AACxB;AACD;AACa;AACV;AAGxD,IAAM,SAAS,GAAW;IACtB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,kEAAa,EAAE;IACtC,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAiB,EAAE;IAClD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,sEAAc,EAAE;CAC/C,CAAC;AAuBF;IAAA;IAAyB,CAAC;IAAb,SAAS;QArBrB,8DAAQ,CAAC;YACN,YAAY,EAAE;gBACV,2DAAY;gBACZ,yFAAoB;gBACpB,kEAAa;gBACb,kEAAa;gBACb,8EAAiB;gBACjB,sEAAc;aACjB;YACD,OAAO,EAAE;gBACL,uEAAa;gBACb,qEAAgB;gBAChB,0DAAW;gBACX,4DAAY,CAAC,OAAO,CAAC,SAAS,EAAE;oBAC5B,OAAO,EAAE,IAAI;oBACb,aAAa,EAAE,KAAK,CAAC,8BAA8B;iBACtD,CAAC;aACL;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC5B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACzCtB,mEAAmE,gCAAgC,0BAA0B,uCAAuC,0ZAA0Z,mBAAmB,2BAA2B,YAAY,2BAA2B,wBAAwB,2BAA2B,uCAAuC,oL;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1rB;AACG;AACb;AAOzC;IAEI,uBACY,WAAwB,EACxB,MAAc;QADd,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;IACtB,CAAC;IAEL,gCAAQ,GAAR;IACA,CAAC;IAED,kCAAU,GAAV;QACI,IAAI,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE;YAChC,iBAAiB;YACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;SACnC;aAAM;YACH,eAAe;YACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;SACtC;IACL,CAAC;IAlBQ,aAAa;QALzB,+DAAS,CAAC;YACP,QAAQ,EAAE,UAAU;;YAEpB,SAAS,EAAE,EAAE;SAChB,CAAC;yCAI2B,iEAAW;YAChB,sDAAM;OAJjB,aAAa,CAoBzB;IAAD,oBAAC;CAAA;AApByB;;;;;;;;;;;;ACT1B,mCAAmC,qBAAqB,GAAG,G;;;;;;;;;;;ACA3D,yJAAyJ,cAAc,kQAAkQ,kBAAkB,0GAA0G,qBAAqB,GAAG,iBAAiB,MAAM,mBAAmB,IAAI,kBAAkB,mCAAmC,cAAc,mCAAmC,mCAAmC,mCAAmC,kDAAkD,yUAAyU,kDAAkD,gXAAgX,kDAAkD,yT;;;;;;;;;;;;;;;;;;;;;;;;;;ACA3jD;AACW;AACb;AAOzC;IAGI,2BACY,WAAwB,EACxB,MAAc;QADd,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QAJ1B,iBAAY,GAAW,EAAE,CAAC;IAKtB,CAAC;IAEL,sCAAU,GAAV;QAAA,iBAOC;QANG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;aACtB,SAAS,CAAC,iBAAO;YACd,IAAI,OAAO,EAAE;gBACT,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;aAC/B;QACL,CAAC,EAAE,eAAK,IAAI,YAAI,CAAC,YAAY,GAAG,sBAAsB,EAA1C,CAA0C,CAAC,CAAC;IAChE,CAAC;IAfQ,iBAAiB;QAL7B,+DAAS,CAAC;YACP,QAAQ,EAAE,UAAU;;;SAGvB,CAAC;yCAK2B,iEAAW;YAChB,sDAAM;OALjB,iBAAiB,CAgB7B;IAAD,wBAAC;CAAA;AAhB6B;;;;;;;;;;;;;ACT7B;AAAA;AAAA;IAAA;IAUD,CAAC;IAAD,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAA4B;AAE5B;IAAA;QAEI,cAAS,GAAS,IAAI,IAAI,EAAE,CAAC;QAE7B,UAAK,GAAqB,IAAI,KAAK,EAAa,CAAC;IAKrD,CAAC;IAHG,sBAAI,2BAAQ;aAAZ;YACI,OAAO,0CAAK,CAAC,0CAAK,CAAC,IAAI,CAAC,KAAK,EAAE,WAAC,IAAI,QAAC,CAAC,SAAS,GAAG,CAAC,CAAC,QAAQ,EAAxB,CAAwB,CAAC,CAAC,CAAC;QACnE,CAAC;;;OAAA;IACL,YAAC;AAAD,CAAC;;;;;;;;;;;;;ACZD,6JAA6J,cAAc,otC;;;;;;;;;;;;;;;;;;;;;;;;;;ACAxH;AACG;AACb;AAOzC;IAOI,wBACY,WAAwB,EACxB,MAAc;QADd,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QARnB,gBAAW,GAAG;YACjB,QAAQ,EAAE,EAAE;YACZ,QAAQ,EAAE,EAAE;SACf;QACD,iBAAY,GAAW,EAAE,CAAC;IAKtB,CAAC;IAEL,iCAAQ,GAAR;IACA,CAAC;IAED,gCAAO,GAAP;QAAA,iBAWC;QAVG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC;aACnC,SAAS,CAAC,iBAAO;YACd,IAAI,OAAO,EAAE;gBACT,IAAI,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;oBAC1C,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;iBAC9B;qBAAM;oBACH,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;iBACtC;aACJ;QACL,CAAC,EAAE,eAAK,IAAI,YAAI,CAAC,YAAY,GAAG,iBAAiB,EAArC,CAAqC,CAAC,CAAC;IAC3D,CAAC;IA1BQ,cAAc;QAL1B,+DAAS,CAAC;YACP,QAAQ,EAAE,WAAW;;YAErB,MAAM,EAAE,EAAE;SACb,CAAC;yCAS2B,iEAAW;YAChB,sDAAM;OATjB,cAAc,CA4B1B;IAAD,qBAAC;CAAA;AA5B0B;;;;;;;;;;;;ACT3B,qCAAqC,yBAAyB,oBAAoB,sBAAsB,gCAAgC,KAAK,qCAAqC,yBAAyB,0BAA0B,KAAK,K;;;;;;;;;;;ACA1O,kPAAkP,SAAS,iGAAiG,YAAY,KAAK,QAAQ,4GAA4G,oBAAoB,4DAA4D,UAAU,2DAA2D,SAAS,iEAAiE,kBAAkB,iN;;;;;;;;;;;;;;;;;;;;;;;;;ACA/pB;AACG;AAQtD;IAGI,8BAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAFrC,aAAQ,GAAc,EAAE,CAAC;IAEgB,CAAC;IAEjD,uCAAQ,GAAR;QAAA,iBAOC;QANG,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE;aAC1B,SAAS,CAAC,iBAAO;YACd,IAAI,OAAO,EAAE;gBACT,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;aAC7C;QACL,CAAC,CAAC;IACV,CAAC;IAED,yCAAU,GAAV,UAAW,OAAgB;QACvB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;IACzC,CAAC;IAhBQ,oBAAoB;QALhC,+DAAS,CAAC;YACP,QAAQ,EAAE,cAAc;;;SAG3B,CAAC;yCAImC,iEAAW;OAHnC,oBAAoB,CAkBhC;IAAD,2BAAC;CAAA;AAlBgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACT6C;AACnC;AAEN;AAEO;AACS;AAMrD;IAEI,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAI5B,UAAK,GAAW,EAAE,CAAC;QACnB,oBAAe,GAAS,IAAI,IAAI,EAAE,CAAC;QAEpC,UAAK,GAAU,IAAI,uDAAK,EAAE,CAAC;QAE3B,aAAQ,GAAc,EAAE,CAAC;IAPhC,CAAC;IASD,kCAAY,GAAZ;QAAA,iBAOC;QANG,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC;aAChC,IAAI,CACD,0DAAG,CAAC,UAAC,IAAW;YACZ,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC;IAED,sBAAW,sCAAa;aAAxB;YACI,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,eAAe,GAAG,IAAI,IAAI,EAAE,CAAC;QACvE,CAAC;;;OAAA;IAEM,2BAAK,GAAZ,UAAa,KAAK;QAAlB,iBASC;QARG,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,KAAK,CAAC;aAC/C,IAAI,CACD,0DAAG,CAAC,UAAC,QAAa;YACd,IAAI,SAAS,GAAG,QAAQ,CAAC;YACzB,KAAI,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;YAC7B,KAAI,CAAC,eAAe,GAAG,SAAS,CAAC,UAAU,CAAC;YAC5C,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC;IAEM,8BAAQ,GAAf;QAAA,iBAaC;QAZG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;YACzB,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC;SACtH;QAED,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,KAAK,EAAE;YAC7C,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAE,eAAe,EAAE,SAAS,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;SACxE,CAAC;aACG,IAAI,CACD,0DAAG,CAAC,kBAAQ;YACR,KAAI,CAAC,KAAK,GAAG,IAAI,uDAAK,EAAE,CAAC;YACzB,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC;IAEM,gCAAU,GAAjB,UAAkB,OAAgB;QAE9B,IAAI,IAAI,GAAc,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,SAAS,IAAI,OAAO,CAAC,EAAE,EAAzB,CAAyB,CAAC,CAAC;QAE5E,IAAI,IAAI,EAAE;YAEN,IAAI,CAAC,QAAQ,EAAE,CAAC;SAEnB;aAAM;YAEH,IAAI,GAAG,IAAI,gEAAS,EAAE,CAAC;YACvB,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,EAAE,CAAC;YAC5B,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,MAAM,CAAC;YACpC,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC,QAAQ,CAAC;YACxC,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC;YAChC,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,KAAK,CAAC;YAC/B,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;YAElB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC/B;IACL,CAAC;IA1EQ,WAAW;QAHvB,gEAAU,CAAC;YACR,UAAU,EAAE,MAAM;SACrB,CAAC;yCAG4B,+DAAU;OAF3B,WAAW,CA6EvB;IAAD,kBAAC;CAAA;AA7EuB;;;;;;;;;;;;ACZxB,kJAAkJ,OAAO,wQ;;;;;;;;;;;;;;;;;;;;;;;;ACAtG;AAOnD;IAEI;IAAgB,CAAC;IAEjB,gCAAQ,GAAR;IACA,CAAC;IALQ,aAAa;QALzB,+DAAS,CAAC;YACP,QAAQ,EAAE,UAAU;;YAEpB,MAAM,EAAE,EAAE;SACb,CAAC;;OACW,aAAa,CAOzB;IAAD,oBAAC;CAAA;AAPyB;;;;;;;;;;;;;ACP1B;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;ACdnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'the-shop',\n  templateUrl: './app.component.html',\n  styles: []\n})\nexport class AppComponent {\n  title = 'Product List';\n}\n","ï»¿import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ProductListComponent } from './product-list/product-list.component';;\r\nimport { CartComponent } from './cart/cart.component';\r\nimport { ShopComponent } from './shop/shop.component'\r\nimport { CheckoutComponent } from './checkout/checkout.component';\r\nimport { LoginComponent } from './login/login.component'\r\n\r\n\r\nconst appRoutes: Routes = [\r\n    { path: \"\", component: ShopComponent },\r\n    { path: \"checkout\", component: CheckoutComponent },\r\n    { path: \"login\", component: LoginComponent }\r\n];\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        ProductListComponent,\r\n        CartComponent,\r\n        ShopComponent,\r\n        CheckoutComponent,\r\n        LoginComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        HttpClientModule,\r\n        FormsModule,\r\n        RouterModule.forRoot(appRoutes, {\r\n            useHash: true,\r\n            enableTracing: false // for debugging of the routes\r\n        })\r\n    ],\r\n    providers: [],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<h3>Shopping Cart</h3>\\r\\n<div>Number of Items:{{dataService.order.items.length}}</div>\\r\\n<div>Subtotal:{{dataService.order.subtotal | currency}}</div>\\r\\n<table class=\\\"table table-info table-hover\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <td><strong>Product</strong></td>\\r\\n            <td><strong>Quantity</strong></td>\\r\\n            <td><strong>Price</strong></td>\\r\\n            <td><strong>Total</strong></td>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let i of dataService.order.items\\\">\\r\\n            <td>{{i.productCategory}}</td>\\r\\n            <td>{{i.quantity}}</td>\\r\\n            <td>{{i.unitPrice | currency}}</td>\\r\\n            <td>{{(i.unitPrice * i.quantity) | currency}}</td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n<button class=\\\"btn btn-success\\\" *ngIf=\\\"dataService.order.items.length > 0\\\" (click)=\\\"onCheckout()\\\">Checkout</button>\\r\\n\"","ï»¿import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../services/dataService';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'the-cart',\r\n    templateUrl: './cart.component.html',\r\n    styleUrls: []\r\n})\r\nexport class CartComponent implements OnInit {\r\n\r\n    constructor(\r\n        private dataService: DataService,\r\n        private router: Router\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    onCheckout() {\r\n        if (this.dataService.loginRequired) {\r\n            // force to login\r\n            this.router.navigate(['login']);\r\n        } else {\r\n            //goto checkout\r\n            this.router.navigate(['checkout']);\r\n        }\r\n    }\r\n\r\n}\r\n","module.exports = \".checkout-thumb {\\n  max-width: 100px;\\n}\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12 alert-warning p-3\\\" *ngIf=\\\"errorMessage\\\">{{errorMessage}}</div>\\r\\n        <div class=\\\"col-12\\\">\\r\\n            <h3>Confirm Order</h3>\\r\\n            <table class=\\\"table table-bordered table-hover\\\">\\r\\n                <tr *ngFor=\\\"let o of dataService.order.items\\\">\\r\\n                    <td><img src=\\\"/img/{{ o.productArtId }}.jpg\\\" alt=\\\"o.productTitle\\\" class=\\\"img-thumbnail checkout-thumb\\\" /></td>\\r\\n                    <td>{{ o.productCategory }}({{ o.productSize }}) - {{ o.productArtist }}: {{ o.productTitle }}</td>\\r\\n                    <td>{{ o.quantity }}</td>\\r\\n                    <td>{{ o.unitPrice|currency:'USD':true }}</td>\\r\\n                    <td>{{ (o.unitPrice * o.quantity)|currency:'USD':true }}</td>\\r\\n                </tr>\\r\\n            </table>\\r\\n            <div class=\\\"col-md-4 col-md-offset-8 text-right\\\">\\r\\n                <table class=\\\"table table-condensed\\\">\\r\\n                    <tr>\\r\\n                        <td class=\\\"text-right\\\">Subtotal</td>\\r\\n                        <td class=\\\"text-right\\\">{{ dataService.order.subtotal|currency:'USD':true }}</td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td class=\\\"text-right\\\">Shipping</td>\\r\\n                        <td class=\\\"text-right\\\">$ 0.00</td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td class=\\\"text-right\\\">Total:</td>\\r\\n                        <td class=\\\"text-right\\\">{{ dataService.order.subtotal|currency:'USD':true }}</td>\\r\\n                    </tr>\\r\\n                </table>\\r\\n                <button class=\\\"btn btn-success m-2\\\" (click)=\\\"onCheckout()\\\">Complete Purchase</button>\\r\\n                <a routerLink=\\\"/\\\" class=\\\"btn btn-info\\\">Cancel</a>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","ï»¿import { Component } from \"@angular/core\";\r\nimport { DataService } from \"../services/dataService\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n    selector: \"checkout\",\r\n    templateUrl: \"checkout.component.html\",\r\n    styleUrls: ['checkout.component.css']\r\n})\r\nexport class CheckoutComponent {\r\n    errorMessage: string = '';\r\n\r\n    constructor(\r\n        private dataService: DataService,\r\n        private router: Router\r\n    ) { }\r\n\r\n    onCheckout() {\r\n        this.dataService.checkout()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.router.navigate(['/']);\r\n                }\r\n            }, error => this.errorMessage = \"Failed to save order\");\r\n    }\r\n}\r\n","ï»¿export class OrderItem {\r\n    id: number;\r\n    quantity: number;\r\n    unitPrice: number;\r\n    productId: number;\r\n    productCategory: string;\r\n    productSize: string;\r\n    productTitle: string;\r\n    productArtist: string;\r\n    productArtId: string;\n}\n","ï»¿import { OrderItem } from \"./order-item\";\r\nimport * as _ from \"lodash\";\r\n\r\nexport class Order {\r\n    orderId: number;\r\n    orderDate: Date = new Date();\r\n    orderNumber: string;\r\n    items: Array<OrderItem> = new Array<OrderItem>();\r\n\r\n    get subtotal(): number {\r\n        return _.sum(_.map(this.items, i => i.unitPrice * i.quantity));\r\n    }\n}\n","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-4 col-md-offset-4\\\">\\r\\n        <div class=\\\"alert alert-warning\\\" *ngIf=\\\"errorMessage\\\">{{errorMessage}}</div>\\r\\n        <form (submit)=\\\"onLogin()\\\" #theForm=\\\"ngForm\\\" novalidate>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"username\\\">Username</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" #username=\\\"ngModel\\\" [(ngModel)]=\\\"credentials.username\\\" required />\\r\\n                <div class=\\\"text-danger\\\" *ngIf=\\\"username.touched && username.invalid && username.errors.required\\\">Username is required</div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"password\\\">Password</label>\\r\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" [(ngModel)]=\\\"credentials.password\\\" required />\\r\\n                <div class=\\\"text-danger\\\" *ngIf=\\\"password.touched && password.invalid && password.errors.required\\\">Password is required</div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"submit\\\" class=\\\"btn btn-success\\\" value=\\\"Login\\\" [disabled]=\\\"theForm.invalid\\\" />\\r\\n                <a routerLink=\\\"/\\\" class=\\\"btn btn-default\\\">Cancel</a>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\"","ï»¿import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../services/dataService';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styles: []\r\n})\r\nexport class LoginComponent implements OnInit {\r\n    public credentials = {\r\n        username: '',\r\n        password: ''\r\n    }\r\n    errorMessage: string = '';\r\n\r\n    constructor(\r\n        private dataService: DataService,\r\n        private router: Router\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    onLogin() {\r\n        this.dataService.login(this.credentials)\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    if (this.dataService.order.items.length == 0) {\r\n                        this.router.navigate(['/'])\r\n                    } else {\r\n                        this.router.navigate(['checkout']);\r\n                    }\r\n                }\r\n            }, error => this.errorMessage = \"Failed to login\");\r\n    }\r\n\r\n}\r\n","module.exports = \".product-info img {\\r\\n    max-width: 100px;\\r\\n    float: left;\\r\\n    margin: 0 2px;\\r\\n    border: solid 1px black;\\r\\n}\\r\\n\\r\\n.product-info .product-name {\\r\\n    font-size: large;\\r\\n    font-weight: bold;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"product-info col-4\\\" *ngFor=\\\"let p of products\\\">\\r\\n            <div class=\\\"card bg-light p-1 m-1\\\">\\r\\n                <img src=\\\"/img/{{p.artId}}.jpg\\\" class=\\\"img-fluid\\\" [alt]=\\\"p.title\\\" />\\r\\n                <div class=\\\"product-name\\\">{{p.category}} - {{p.size}}</div>\\r\\n                <ul class=\\\"product-props\\\">\\r\\n                    <li><strong>Price:</strong> {{p.price | currency}}</li>\\r\\n                    <li><strong>Artist:</strong> {{p.artist}}</li>\\r\\n                    <li><strong>Title:</strong> {{p.title}}</li>\\r\\n                    <li><strong>Description:</strong> {{p.artDescription}}</li>\\r\\n                </ul>\\r\\n                <button id=\\\"buy-button\\\" class=\\\"btn btn-success\\\" (click)=\\\"addProduct(p)\\\">Buy</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","ï»¿import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../services/dataService';\r\nimport { Product } from '../interfaces/product';\r\n\r\n@Component({\r\n    selector: 'product-list',\r\n    templateUrl: './product-list.component.html',\r\n    styleUrls: ['./product-list.component.css']\r\n})\r\nexport class ProductListComponent implements OnInit {\r\n    public products: Product[] = [];\r\n\r\n    constructor(private dataService: DataService) { }\r\n\r\n    ngOnInit() {\r\n        this.dataService.loadProducts()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.products = this.dataService.products;\r\n                }\r\n            })\r\n    }\r\n\r\n    addProduct(product: Product) {\r\n        this.dataService.addToOrder(product);\r\n    }\r\n\r\n}\r\n","ï»¿import { HttpClient, HttpResponse, HttpHeaders } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\"\r\nimport { map } from 'rxjs/operators';\r\nimport { Product } from \"../interfaces/product\";\r\nimport { Order } from \"../interfaces/order\";\r\nimport { OrderItem } from \"../interfaces/order-item\";\r\n\r\n\r\n@Injectable({\n    providedIn: 'root'\n})\r\nexport class DataService {\r\n\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n\r\n    private token: string = \"\";\r\n    private tokenExpiration: Date = new Date();\r\n\r\n    public order: Order = new Order();\r\n\r\n    public products: Product[] = [];\r\n\r\n    loadProducts(): Observable<boolean> {\r\n        return this.http.get(\"/api/products\")\r\n            .pipe(\r\n                map((data: any[]) => {\r\n                    this.products = data;\r\n                    return true;\r\n                }));\r\n    }\r\n\r\n    public get loginRequired(): boolean {\r\n        return this.token.length == 0 || this.tokenExpiration > new Date();\r\n    }\r\n\r\n    public login(creds) {\r\n        return this.http.post(\"/account/createtoken\", creds)\r\n            .pipe(\r\n                map((response: any) => {\r\n                    let tokenInfo = response;\r\n                    this.token = tokenInfo.token;\r\n                    this.tokenExpiration = tokenInfo.expiration;\r\n                    return true;\r\n                }));\r\n    }\r\n\r\n    public checkout() {\r\n        if (!this.order.orderNumber) {\r\n            this.order.orderNumber = this.order.orderDate.getFullYear().toString() + this.order.orderDate.getTime().toString();\r\n        }\r\n\r\n        return this.http.post(\"/api/orders\", this.order, {\r\n            headers: new HttpHeaders({ \"Authorization\": \"Bearer \" + this.token })\r\n        })\r\n            .pipe(\r\n                map(response => {\r\n                    this.order = new Order();\r\n                    return true;\r\n                }));\r\n    }\r\n\r\n    public addToOrder(product: Product) {\r\n\r\n        let item: OrderItem = this.order.items.find(i => i.productId == product.id);\r\n\r\n        if (item) {\r\n\r\n            item.quantity++;\r\n\r\n        } else {\r\n\r\n            item = new OrderItem();\r\n            item.productId = product.id;\r\n            item.productArtist = product.artist;\r\n            item.productCategory = product.category;\r\n            item.productArtId = product.artId;\r\n            item.productTitle = product.title;\r\n            item.productSize = product.size;\r\n            item.unitPrice = product.price;\r\n            item.quantity = 1;\r\n\r\n            this.order.items.push(item);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row no-gutters\\\">\\r\\n        <div class=\\\"col-9 p-0\\\">\\r\\n            <h3>{{title}}</h3>\\r\\n            <product-list></product-list>\\r\\n        </div>\\r\\n        <div class=\\\"col-3 p-0\\\">\\r\\n            <div class=\\\"card bg-light p-2\\\">\\r\\n                <the-cart></the-cart>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","ï»¿import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'the-shop',\n    templateUrl: './shop.component.html',\n    styles: []\n})\nexport class ShopComponent implements OnInit {\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}