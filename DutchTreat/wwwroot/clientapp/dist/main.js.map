{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./app/app.component.html","webpack:///./app/app.component.ts","webpack:///./app/app.module.ts","webpack:///./app/cart/cart.component.html","webpack:///./app/cart/cart.component.ts","webpack:///./app/checkout/checkout.component.css","webpack:///./app/checkout/checkout.component.html","webpack:///./app/checkout/checkout.component.ts","webpack:///./app/interfaces/order-item.ts","webpack:///./app/interfaces/order.ts","webpack:///./app/product-list/product-list.component.css","webpack:///./app/product-list/product-list.component.html","webpack:///./app/product-list/product-list.component.ts","webpack:///./app/services/data.service.ts","webpack:///./app/shop/shop.component.html","webpack:///./app/shop/shop.component.ts","webpack:///./environments/environment.ts","webpack:///./main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'the-shop',\n  templateUrl: './app.component.html',\n  styles: []\n})\nexport class AppComponent {\n  title = 'Product List';\n}\n","﻿import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ProductListComponent } from './product-list/product-list.component';;\r\nimport { CartComponent } from './cart/cart.component';\r\nimport { ShopComponent } from './shop/shop.component'\r\nimport { CheckoutComponent } from './checkout/checkout.component'\r\n\r\n\r\nconst appRoutes: Routes = [\r\n    { path: \"\", component: ShopComponent },\r\n    { path: \"checkout\", component: CheckoutComponent }\r\n];\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        ProductListComponent,\r\n        CartComponent,\r\n        ShopComponent,\r\n        CheckoutComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        HttpClientModule,\r\n        RouterModule.forRoot(appRoutes, {\r\n            useHash: true,\r\n            enableTracing: false // for debugging of the routes\r\n        })\r\n    ],\r\n    providers: [],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<h3>Shopping Cart</h3>\\r\\n<div>Number of Items:{{dataService.order.items.length}}</div>\\r\\n<div>Subtotal:{{dataService.order.subtotal | currency}}</div>\\r\\n<table class=\\\"table table-info table-hover\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <td><strong>Product</strong></td>\\r\\n            <td><strong>Quantity</strong></td>\\r\\n            <td><strong>Price</strong></td>\\r\\n            <td><strong>Total</strong></td>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let i of dataService.order.items\\\">\\r\\n            <td>{{i.productCategory}}</td>\\r\\n            <td>{{i.quantity}}</td>\\r\\n            <td>{{i.unitPrice | currency}}</td>\\r\\n            <td>{{(i.unitPrice * i.quantity) | currency}}</td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n<a routerLink=\\\"checkout\\\" class=\\\"btn btn-success\\\" *ngIf=\\\"dataService.order.items.length > 0\\\">Checkout</a>\\r\\n\"","﻿import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../services/data.service';\r\n\n@Component({\n    selector: 'the-cart',\n    templateUrl: './cart.component.html',\n    styleUrls: []\n})\nexport class CartComponent implements OnInit {\n\n    constructor(private dataService: DataService) { }\n\n    ngOnInit() {\n    }\n\n}\n","module.exports = \".checkout-thumb {\\n  max-width: 100px;\\n}\\n\"","module.exports = \"<div class=\\\"row\\\">\\r\\n    <h3>Confirm Order</h3>\\r\\n    <table class=\\\"table table-bordered table-hover\\\">\\r\\n        <tr *ngFor=\\\"let o of dataService.order.items\\\">\\r\\n            <td><img src=\\\"/img/{{ o.productArtId }}.jpg\\\" alt=\\\"o.productTitle\\\" class=\\\"img-thumbnail checkout-thumb\\\" /></td>\\r\\n            <td>{{ o.productCategory }}({{ o.productSize }}) - {{ o.productArtist }}: {{ o.productTitle }}</td>\\r\\n            <td>{{ o.quantity }}</td>\\r\\n            <td>{{ o.unitPrice|currency:'USD':true }}</td>\\r\\n            <td>{{ (o.unitPrice * o.quantity)|currency:'USD':true }}</td>\\r\\n        </tr>\\r\\n    </table>\\r\\n    <div class=\\\"col-md-4 col-md-offset-8 text-right\\\">\\r\\n        <table class=\\\"table table-condensed\\\">\\r\\n            <tr>\\r\\n                <td class=\\\"text-right\\\">Subtotal</td>\\r\\n                <td class=\\\"text-right\\\">{{ dataService.order.subtotal|currency:'USD':true }}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td class=\\\"text-right\\\">Shipping</td>\\r\\n                <td class=\\\"text-right\\\">$ 0.00</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td class=\\\"text-right\\\">Total:</td>\\r\\n                <td class=\\\"text-right\\\">{{ dataService.order.subtotal|currency:'USD':true }}</td>\\r\\n            </tr>\\r\\n        </table>\\r\\n        <button class=\\\"btn btn-success m-2\\\" (click)=\\\"onCheckout()\\\">Complete Purchase</button>\\r\\n        <a routerLink=\\\"/\\\" class=\\\"btn btn-info\\\">Cancel</a>\\r\\n    </div>\\r\\n</div>\\r\\n\"","﻿import { Component } from \"@angular/core\";\nimport { DataService } from \"../services/data.service\";\r\n\n@Component({\n    selector: \"checkout\",\n    templateUrl: \"checkout.component.html\",\n    styleUrls: ['checkout.component.css']\n})\nexport class CheckoutComponent {\n\n    constructor(private dataService: DataService) {\n    }\n\n    onCheckout() {\n        // TODO\n        alert(\"Doing checkout\");\n    }\n}\r\n","﻿export class OrderItem {\r\n    id: number;\r\n    quantity: number;\r\n    unitPrice: number;\r\n    productId: number;\r\n    productCategory: string;\r\n    productSize: string;\r\n    productTitle: string;\r\n    productArtist: string;\r\n    productArtId: string;\n}\n","﻿import { OrderItem } from \"./order-item\";\r\nimport * as _ from \"lodash\";\r\n\r\nexport class Order {\r\n    orderId: number;\r\n    orderDate: Date = new Date();\r\n    orderNumber: string;\r\n    items: Array<OrderItem> = new Array<OrderItem>();\r\n\r\n    get subtotal(): number {\r\n        return _.sum(_.map(this.items, i => i.unitPrice * i.quantity));\r\n    }\n}\n","module.exports = \".product-info img {\\r\\n    max-width: 100px;\\r\\n    float: left;\\r\\n    margin: 0 2px;\\r\\n    border: solid 1px black;\\r\\n}\\r\\n\\r\\n.product-info .product-name {\\r\\n    font-size: large;\\r\\n    font-weight: bold;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"product-info col-4\\\" *ngFor=\\\"let p of products\\\">\\r\\n            <div class=\\\"card bg-light p-1 m-1\\\">\\r\\n                <img src=\\\"/img/{{p.artId}}.jpg\\\" class=\\\"img-fluid\\\" [alt]=\\\"p.title\\\" />\\r\\n                <div class=\\\"product-name\\\">{{p.category}} - {{p.size}}</div>\\r\\n                <ul class=\\\"product-props\\\">\\r\\n                    <li><strong>Price:</strong> {{p.price | currency}}</li>\\r\\n                    <li><strong>Artist:</strong> {{p.artist}}</li>\\r\\n                    <li><strong>Title:</strong> {{p.title}}</li>\\r\\n                    <li><strong>Description:</strong> {{p.artDescription}}</li>\\r\\n                </ul>\\r\\n                <button id=\\\"buy-button\\\" class=\\\"btn btn-success\\\" (click)=\\\"addProduct(p)\\\">Buy</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","﻿import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../services/data.service';\r\nimport { Product } from '../interfaces/product';\r\n\r\n@Component({\r\n    selector: 'product-list',\r\n    templateUrl: './product-list.component.html',\r\n    styleUrls: ['./product-list.component.css']\r\n})\r\nexport class ProductListComponent implements OnInit {\r\n    public products: Product[] = [];\r\n\r\n    constructor(private dataService: DataService) { }\r\n\r\n    ngOnInit() {\r\n        this.dataService.loadProducts()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.products = this.dataService.products;\r\n                }\r\n            })\r\n    }\r\n\r\n    addProduct(product: Product) {\r\n        this.dataService.addToOrder(product);\r\n    }\r\n\r\n}\r\n","﻿import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { Product } from '../interfaces/product';\r\nimport { Observable } from 'rxjs';\r\nimport { Order } from '../interfaces/order';\r\nimport { OrderItem } from '../interfaces/order-item';\r\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DataService {\r\n    public products: Product[] = [];\r\n    public order: Order = new Order();\r\n\n    constructor(private http: HttpClient) { }\r\n\r\n    loadProducts(): Observable<boolean> {\r\n        return this.http.get(\"/api/products\")\r\n            .pipe(\r\n                map((data: Product[]) => {\r\n                    this.products = data;\r\n                    return true;\r\n                }));\r\n    }\r\n\r\n    addToOrder(newProduct: Product) {\r\n        let item: OrderItem = this.order.items.find(item => item.id == newProduct.id)\r\n\r\n        if (item) {\r\n            item.quantity++;\r\n        } else {\r\n            item = new OrderItem();\r\n\r\n            item.id = newProduct.id;\r\n            item.productArtist = newProduct.artist;\r\n            item.productArtId = newProduct.artId;\r\n            item.productCategory = newProduct.category;\r\n            item.productSize = newProduct.size;\r\n            item.productTitle = newProduct.title;\r\n            item.unitPrice = newProduct.price;\r\n            item.quantity = 1;\r\n\r\n            this.order.items.push(item);\r\n        }\r\n\r\n    }\n}\n","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row no-gutters\\\">\\r\\n        <div class=\\\"col-9 p-0\\\">\\r\\n            <h3>{{title}}</h3>\\r\\n            <product-list></product-list>\\r\\n        </div>\\r\\n        <div class=\\\"col-3 p-0\\\">\\r\\n            <div class=\\\"card bg-light p-2\\\">\\r\\n                <the-cart></the-cart>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","﻿import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'the-shop',\n    templateUrl: './shop.component.html',\n    styles: []\n})\nexport class ShopComponent implements OnInit {\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}