{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./app/app.component.html","webpack:///./app/app.component.ts","webpack:///./app/app.module.ts","webpack:///./app/product-list/product-list.component.css","webpack:///./app/product-list/product-list.component.html","webpack:///./app/product-list/product-list.component.ts","webpack:///./app/services/data.service.ts","webpack:///./environments/environment.ts","webpack:///./main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row no-gutters\\\">\\r\\n        <div class=\\\"col-9 p-0\\\">\\r\\n            <h3>{{title}}</h3>\\r\\n            <product-list></product-list>\\r\\n        </div>\\r\\n        <div class=\\\"col-3 p-0\\\">\\r\\n            <div class=\\\"card bg-light p-2\\\">\\r\\n                <h3>Cart</h3>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'the-shop',\n  templateUrl: './app.component.html',\n  styles: []\n})\nexport class AppComponent {\n  title = 'Product List';\n}\n","﻿import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\r\n\nimport { AppComponent } from './app.component';\nimport { ProductListComponent } from './product-list/product-list.component';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ProductListComponent,\n    ],\n    imports: [\n        BrowserModule,\r\n        HttpClientModule\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".product-info img {\\r\\n    max-width: 100px;\\r\\n    float: left;\\r\\n    margin: 0 2px;\\r\\n    border: solid 1px black;\\r\\n}\\r\\n\\r\\n.product-info .product-name {\\r\\n    font-size: large;\\r\\n    font-weight: bold;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"product-info col-4\\\" *ngFor=\\\"let p of products\\\">\\r\\n            <div class=\\\"card bg-light p-1 m-1\\\">\\r\\n                <img src=\\\"/img/{{p.artId}}.jpg\\\" class=\\\"img-fluid\\\" [alt]=\\\"p.title\\\" />\\r\\n                <div class=\\\"product-name\\\">{{p.category}} - {{p.size}}</div>\\r\\n                <ul class=\\\"product-props\\\">\\r\\n                    <li><strong>Price:</strong> {{p.price | currency}}</li>\\r\\n                    <li><strong>Artist:</strong> {{p.artist}}</li>\\r\\n                    <li><strong>Title:</strong> {{p.title}}</li>\\r\\n                    <li><strong>Description:</strong> {{p.artDescription}}</li>\\r\\n                </ul>\\r\\n                <button id=\\\"buy-button\\\" class=\\\"btn btn-success\\\">Buy</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","﻿import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../services/data.service';\r\nimport { Product } from '../interfaces/product';\r\n\r\n@Component({\r\n    selector: 'product-list',\r\n    templateUrl: './product-list.component.html',\r\n    styleUrls: ['./product-list.component.css']\r\n})\r\nexport class ProductListComponent implements OnInit {\r\n    public products: Product[] = [];\r\n\r\n    constructor(private dataService: DataService) { }\r\n\r\n    ngOnInit() {\r\n        this.dataService.loadProducts()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.products = this.dataService.products;\r\n                }\r\n            })\r\n    }\r\n\r\n}\r\n","﻿import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { Product } from '../interfaces/product';\r\nimport { Observable } from 'rxjs';\r\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DataService {\r\n    public products: Product[] = [];\r\n\n    constructor(private http: HttpClient) { }\r\n\r\n    loadProducts(): Observable<boolean> {\r\n        return this.http.get(\"/api/products\")\r\n            .pipe(\r\n                map((data: Product[]) => {\r\n                    this.products = data;\r\n                    return true;\r\n                }));\r\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}